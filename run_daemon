#!/usr/bin/python
from optparse import OptionParser
import os
import sys
import string
import time
import syslog

import imagerdb
import daemon
import mounter
import subprocess

basemountpoint="/tmp/nbdmount/"

def runPartition(task,devname):
	global basemountpoint
	env = os.environ
	env["PART"]="/dev/"+devname
        env["ROOT"]=basemountpoint+devname


	cmd = [ task[9]]
	print cmd
	print env
	print task
	p = subprocess.call(cmd,env=env,shell=True)

    
def runPartitions(task,devnr):
	partitions=open("/proc/partitions","r").read()
	for part in partitions.split('\n'):
		cols=part.split()
		if (len(cols)>3):
			if (string.find(cols[3],"nbd"+str(devnr)+"p")==0):
				runPartition(task,cols[3])

	ImgDB.setrun_taskstate(task,"finished")



def pollChange():
    task=ImgDB.getrunnable_task()
    print task
    if (task is None):
        return 0
    print task[8]
    if (task[8]=="partition"):
        runPartitions(task,0)
    if (task[8]=="filesystem"):
        runPartitions(task,0)
#    ImgDB.setrun_taskstate(task,"running")
    time.sleep(10);

#nothin to do
    return 1

def pollChanges():
    while (pollChange()): pass
	


if __name__=='__main__':
  parser = OptionParser()
  parser.add_option("-p", "--pidfile", dest="pidfile",default="/var/run/mount_daemon.pid",
                  help="file to store the daemon processid", metavar="FILE")
  parser.add_option("-d", "--no_daemon",
                  action="store_false", dest="daemon", default=True,
                  help="start in foreground")

  (options, args) = parser.parse_args()

  if (options.daemon):
      retCode = daemon.createDaemon(options.pidfile)

  ImgDB=imagerdb.ImagerDb()

  try :
    while(1):
	time.sleep(1)
	pollChanges()

  except KeyboardInterrupt:
    del ImgDB
    print '%s' % sys.exc_type
    print 'shutting down'
  

